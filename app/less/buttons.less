@import 'variables.less';

.btn {
    border-radius: @boxBorderRadius;
}

button.btn {
    font-size: inherit;
}

.btn .glyphicon {
    margin-right: 4px;
}

// Mixins taken directly from bootstrapw

// button-variant from https://github.com/twbs/bootstrap/blob/master/less/mixins/buttons.less
.button-variant(@color; @background; @border) {
    color: @color;
    background-color: @background;
    border-color: @border;
    transition: transform 0.5s easeinout;

    &:hover,
    &:focus,
    &:active,
    &.active,
    .open > .dropdown-toggle & {
        color: @color;
        background-color: darken(@background, 3%);
        border-color: darken(@border, 1%);

        .glyphicon {
            -webkit-transition: transform 0.5s easeinout;
            transition: transform 0.5s easeinout;
            transform: scale(1.2);
        }
    }
    &:active,
    &.active,
    .open > .dropdown-toggle & {
        background-image: none;
    }
    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &,
        &:hover,
        &:focus,
        &:active,
        &.active {
            background-color: @background;
            border-color: @border;
        }
    }

    .badge {
        color: @background;
        background-color: @color;
    }
}

// Small mixin that resets most of the button styles (except for colours and padding)
.btn-reset-styles() {
    text-align: left;
    white-space: normal;
    border: 0;

    .glyphicon {
        margin-right: 0;
    }
}

// Primary button
.btn-primary {
    .button-variant(#fff; @color-accent; #fff);
}

.btn-default {
    .button-variant(@colorDark; @colorLight; @colorLighter);

    &.active.active { // GRRR, specificity not working in my favour, so need to add .active twice (because auf the .active.disabled styles)
        background-color: @colorDark;
        color: @colorLight;
        box-shadow: none;
    }
}

.btn-default--transparent {
    background-color: transparent;
}

.btn-no-styles {
    .button-variant(@colorDark; transparent; transparent);
    .btn-reset-styles();
    padding: 0;

    // Reset transform of glyphicon
    &:hover,
    &:focus,
    &:active,
    &.active,
    .open > .dropdown-toggle & {
        .glyphicon {
            transform: none;
        }
    }
}

.btn-large {
    height: 48px;
    width: 100%;
    margin-bottom: 30px;
    border-radius: 5px;
    border: solid 1.5px @_color-blue;

    .btn__icon,
    .btn__icon svg {
        width: 15px;
        height: 15px;
    }
}

.btn-small {
    min-width: 30%;
    min-height: 30px;
    border-radius: 5px;
    border: solid 1.5px @_color-blue;
    .vg-typography-display-1-strong();
    color: white;
    text-align: center;

    .btn__icon,
    .btn__icon svg {
        width: 13px;
        height: 13px;
    }
}

button.menu-button {
    .button-variant(@colorDark; @colorLight; @colorLighter);
    border-radius: 0;
}

.btn-filters {
    .badge {
        padding: 1px 5px;
        margin-left: 3px;
    }
}

.menu-button-home {
    background-color: @_color-dark-grey
}

.btn__icon {
    position: relative;
    top: 2px;
}

.btn__icon svg path {
    fill: currentColor;
}
